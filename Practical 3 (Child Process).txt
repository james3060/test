#1. Creating Child Process Using Python

import os

# Creating a child process 
pid = os.fork()

if pid > 0:
    # Parent process
    print(f"Parent process with PID: {os.getpid()}") 
    print(f"Created child process with PID: {pid}") 
else:
    # Child process
    print(f"Child process with PID: {os.getpid()}")


#2.Orphan Process

import os
import time

# Creating a child process 
pid = os.fork()

if pid > 0:
    # Parent process terminates before child
    print(f"Parent process (PID: {os.getpid()}) is terminating")
else:
    # Child process continues to run
    time.sleep(5)  # Simulating some work in the child process
    print(f"Orphan process with PID: {os.getpid()} (adopted by init)")

#3.Zombie Process

import os
import time

# Creating a child process 
pid = os.fork()

if pid > 0:
    # Parent process does not wait for the child to terminate
    print(f"Parent process (PID: {os.getpid()})")
    print(f"Child process (PID: {pid}) has been created but will become a zombie.")
    
    time.sleep(10)  # Let the parent process live while child terminates
else:
    # Child process terminates immediately
    print(f"Child process (PID: {os.getpid()}) is terminating")
    os._exit(0)
