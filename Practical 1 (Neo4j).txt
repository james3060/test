1.Import the Hubway data into Neo4j
Code:
LOAD CSV WITH HEADERS FROM 'file:///hubway1.csv' AS row
MERGE (startStation:Station {id: row.`start station id`, name: row.`start station name`, latitude: row.`start station latitude`, longitude: row.`start station longitude`})
MERGE (endStation:Station {id: row.`end station id`, name: row.`end station name`})
CREATE (trip:Trip {duration: row.tripduration, starttime: row.starttime, stoptime: row.stoptime})
MERGE (startStation)-[:STARTED]->(trip)
MERGE (trip)-[:ENDED]->(endStation);
This query creates nodes for stations (start and end) and relationships (STARTED and ENDED) for trips.
The MERGE ensures stations are not duplicated if they already exist.

A. List top 10 stations with most outbound trips (Show station name and number of trips)
Code:
MATCH (startStation:Station)-[:STARTED]->(trip:Trip)
RETURN startStation.name AS station_name, COUNT(trip) AS outbound_trips
ORDER BY outbound_trips DESC
LIMIT 10;

B. List top10 stations with most in bound trips (Show station name and number of trips)
Code:
MATCH (endStation:Station)<-[:ENDED]-(trip:Trip)
RETURN endStation.name AS station_name, COUNT(trip) AS inbound_trips
ORDER BY inbound_trips DESC
LIMIT 10;

C. List top 5 routes with most trips (Show starting station name, ending station name and
number of trips)
Code:
MATCH (startStation:Station)-[:STARTED]->(trip:Trip)-[:ENDED]->(endStation:Station)
RETURN startStation.name AS start_station, endStation.name AS end_station, COUNT(trip) AS trip_count
ORDER BY trip_count DESC

D. List the hour number and number of trips which start 5
hours from the station ”B.U.Central”
Code:
MATCH (startStation:Station {name: 'B.U. Central - 725 Comm. Ave.'})-[:STARTED]->(trip:Trip)
WITH trip, 
substring(trip.starttime, 6, 4) + '-' + substring(trip.starttime, 3, 2) + '-' + substring(trip.starttime, 0, 2) + 'T' + substring(trip.starttime, 11) AS reformatted_starttime
WITH trip, datetime(reformatted_starttime) AS start_datetime
WITH trip, start_datetime.hour + 5 AS shifted_hour
RETURN shifted_hour AS hour, COUNT(trip) AS trips_count
ORDER BY hour;

E. List the hour number and number of trips which end at
the station ”B.U. Central”
Code:
MATCH (endStation:Station {name: 'B.U. Central - 725 Comm. Ave.'})<-[:ENDED]-(trip:Trip)
WITH trip, 
substring(trip.stoptime, 6, 4) + '-' + substring(trip.stoptime, 3, 2) + '-' + substring(trip.stoptime, 0, 2) + 'T' + substring(trip.stoptime, 11) AS reformatted_stoptime
WITH trip, datetime(reformatted_stoptime) AS end_datetime
WITH trip, end_datetime.hour AS end_hour
RETURN end_hour AS hour, COUNT(trip) AS trips_count
ORDER BY hour;
